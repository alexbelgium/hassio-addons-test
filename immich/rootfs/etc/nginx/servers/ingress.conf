server {
    listen %%interface%%:%%port%% default_server;
    #include /etc/nginx/includes/server_params.conf;
    #include /etc/nginx/includes/proxy_params.conf;
    client_max_body_size 0;
    server_name immich.*;

    location / {
        proxy_pass http://127.0.0.1:3000;

        proxy_buffering off;
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 24k;
        proxy_buffers 64 4k;
        proxy_force_ranges on;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Rewrite urls
        absolute_redirect off;                                  # Avoid port absence in redirect
        proxy_set_header Accept-Encoding "";                    # Enable sub_filter
        sub_filter_once off;                                    # Enable sub_filter
        sub_filter_types *;                                     # Enable sub_filter
        gzip off;                                               # Enable sub_filter
        sub_filter /auth %%ingress_entry%%/auth;                # Redirect auth entrypoint
        proxy_redirect default;
        proxy_redirect /api%%ingress_entry%%(.*) %%ingress_entry%%$1;
        #sub_filter /api%%ingress_entry%% %%ingress_entry%%;     # Redirect auth entrypoint
        #rewrite (.*)/api/hassio_ingress/[^/]*(/.*) $1*2 break;  # Rewrite when double hassio_ingress in the name
        #rewrite /api(/api/hassio_ingress.*) $1 break;           # Rewrite when double /api in the name
    }
    
    location ~ (.*)%%ingress_entry%%(/.*) {
            absolute_redirect off;              # Do not add port to redirect
            return 301 %%ingress_entry%%$1$2;      # Send to ingress
    }

    location /api {
        rewrite /api/(.*) /$1 break;
        proxy_pass http://127.0.0.1:3001;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}
