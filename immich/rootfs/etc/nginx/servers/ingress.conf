server {
    listen %%interface%%:%%port%% default_server;
    include /etc/nginx/includes/server_params.conf;
    include /etc/nginx/includes/proxy_params.conf;
    client_max_body_size 0;
    server_name immich.*;

    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        proxy_pass http://127.0.0.1:3000;

        proxy_buffering off;
        proxy_buffer_size 16k;
        proxy_busy_buffers_size 24k;
        proxy_buffers 64 4k;
        proxy_force_ranges on;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        proxy_set_header Accept-Encoding "";
        absolute_redirect off;
        sub_filter_once off;
        sub_filter_types *;
        gzip off;
        sub_filter /auth %%ingress_entry%%/auth;
        #proxy_redirect default;
        #proxy_redirect ~^http://[^/]+(/.+)$ %%ingress_entry%%$1;
    }

location ~ ^%%ingress_entry%%(\d+) {
        absolute_redirect off;              # Do not add port to redirect
        return 301 $1;      # Send to ingress
}

    location /api {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        proxy_pass http://127.0.0.1:3001;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        rewrite /api/(.*) /$1 break;
    }
}
