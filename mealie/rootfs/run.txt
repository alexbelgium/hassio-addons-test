#!/usr/bin/env bashio
# shellcheck shell=bash

####################
# Starting scripts #
####################

for SCRIPTS in /etc/cont-init.d/*; do
    [ -e "$SCRIPTS" ] || continue
    echo "$SCRIPTS: executing"
    chown "$(id -u)":"$(id -g)" "$SCRIPTS"
    chmod a+x "$SCRIPTS"
    # Change shebang if no s6 supervision
    sed -i 's|/usr/bin/with-contenv bashio|/usr/bin/env bashio|g' "$SCRIPTS"
    /."$SCRIPTS" || echo "$SCRIPTS: exiting $?"
done

################
# MODIFY IMAGE #
################

#Sets caddyfile to 9925 as default port
if [ -f /app/Caddyfile ]; then
    sed -i "s/80/9925/g" /app/Caddyfile
    echo "Caddyfile adapted"
fi

#Sets caddyfile to 9925 as default port
if [ -f /app/frontend/Caddyfile ]; then
    sed -i "s/3000/9925/g" /app/frontend/Caddyfile
    echo "Caddyfile adapted"
fi

####################
# Export variables #
####################

bashio::log.info "Exporting variables"
for k in $(bashio::jq "/data/options.json" 'keys | .[]'); do
    bashio::log.blue "$k"="$(bashio::config "$k")"
    export "$k"="$(bashio::config "$k")"
done

###############
# PERMISSIONS #
###############

echo "Permissions adapted"
chmod -R 777 /data

#######
# SSL #
#######

bashio::config.require.ssl
if bashio::config.true 'ssl'; then
   bashio::log.info "Configuring ssl"
   CERTFILE=$(bashio::config 'certfile')
   KEYFILE=$(bashio::config 'keyfile')
   if [ -f /app/Caddyfile ]; then sed -i "7 i tls /ssl/$CERTFILE /ssl/$KEYFILE" /app/Caddyfile; fi
   if [ -f /app/frontend/Caddyfile ]; then sed -i "7 i tls /ssl/$CERTFILE /ssl/$KEYFILE" /app/frontend/Caddyfile; fi
fi

exec nginx & bashio::log.info "Starting nginx"
